trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/**
      - public/**
      - package.json
      - tailwind.config.js
      - postcss.config.js

resources:
  repositories:
    - repository: self
      trigger: none

stages:
  - stage: Build
    displayName: Build React Application
    jobs:
      - job: Build
        pool:
          name: moviesagent
          demands:
            - Agent.Name -equals MoviesPipelineAgent

        steps:
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: "20.x"

          - script: mkdir -p $(Pipeline.Workspace)/.npm
            displayName: "Ensure .npm directory exists"

          - task: Cache@2
            displayName: "Cache npm"
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
              path: $(Pipeline.Workspace)/.npm

          - script: npm ci
            displayName: "Install Dependencies"
            continueOnError: false

          - script: npm run build
            displayName: "Build Application"
            continueOnError: false

          # Uncomment when tests are added
          # - script: npm test
          #   displayName: "Run Tests"
          #   continueOnError: false

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact"
            inputs:
              PathtoPublish: "build"
              ArtifactName: "drop"
              publishLocation: "Container"

  - stage: Deploy
    displayName: Deploy to Azure App Service
    dependsOn: Build
    jobs:
      - deployment: Deploy
        environment: "Production"
        pool:
          name: moviesagent
          demands:
            - Agent.Name -equals MoviesPipelineAgent

        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: "Visual Studio Enterprise Subscription(e5855b08-7ae6-492b-b26a-0729c22fa918)"
                    appType: "webApp"
                    appName: "moviesFrontEnd"
                    package: $(Pipeline.Workspace)/drop/**/*.zip
